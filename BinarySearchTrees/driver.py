from binary_search_tree import *
import turtle
from turtle_numbers import *

def main():
    t = BinarySearchTree()
    t.insert(5,5)
    t.insert(3,3)
    t.insert(8,8)
    t.insert(10, 10)
    t.insert(7,7)
    t.insert(2,2)
    print(t)
    print('Maxheight', t.max_height())
    print("Current Height:",t.current_height())

    print('Inorder Traversal')
    t.traverse_inorder()
    print('Preorder Traversal')
    t.traverse_preorder()
    print('Postorder Traversal')
    t.traverse_postorder()


    #Drawing tree
    turtle_tree = BinarySearchTree()
    turtle.setup(1200,800)
    window = turtle.Screen()
    window.title('Binary Search Tree')
    turtle.speed(10)

    #   Setting root as 4
    turtle_tree.insert(4,4)
    turtle.pu()
    turtle.setpos(0, 260)
    turtle.pd()
    turtle.circle(60)
    rootpos = turtle.pos()
    turtle.pu()
    turtle.left(90)
    turtle.forward(70)
    draw4()
    turtle.pu()
    turtle.setpos(rootpos)

    #   Inserting 1
    turtle_tree.insert(1,1)
    turtle.left(120)
    turtle.pd()
    turtle.forward(140)
    turtle.setheading(180)
    turtle.circle(60)
    prevpos = turtle.pos()
    turtle.left(90)
    turtle.pu()
    turtle.forward(30)
    turtle.pd()
    draw1()
    turtle.pu()

    #   Inserting 5
    turtle_tree.insert(5,5)
    turtle.setpos(rootpos)
    turtle.setheading(90)
    turtle.right(120)
    turtle.pd()
    turtle.forward(140)
    turtle.setheading(180)
    turtle.circle(60)
    prevpos = turtle.pos()
    turtle.left(90)
    turtle.pu()
    turtle.forward(30)
    turtle.left(90)
    turtle.forward(-10)
    turtle.pd()
    draw5()
    turtle.pu()
    turtle.setpos(prevpos)
    turtle.left(90)
    turtle.forward(120)

    #   Inserting 7
    turtle_tree.insert(7,7)
    turtle_tree.insert(5, 5)
    turtle.setheading(90)
    turtle.right(120)
    turtle.pd()
    turtle.forward(140)
    turtle.setheading(180)
    turtle.circle(60)
    prevpos = turtle.pos()
    turtle.left(90)
    turtle.pu()
    turtle.forward(30)
    turtle.pd()
    draw7()
    turtle.pu()
    turtle.setpos(prevpos)
    turtle.left(90)
    turtle.forward(120)

    #   Inserting 9
    turtle_tree.insert(9,9)
    turtle.setheading(90)
    turtle.right(120)
    turtle.pd()
    turtle.forward(140)
    turtle.setheading(180)
    turtle.circle(60)
    prevpos = turtle.pos()
    turtle.left(90)
    turtle.pu()
    turtle.forward(30)
    turtle.pd()
    draw9()
    turtle.pu()
    turtle.setpos(prevpos)
    turtle.left(90)
    turtle.forward(120)


    print('Tree for turtle: ')
    print(turtle_tree)
    turtle.exitonclick()
    return t

if __name__ == "__main__": t = main()